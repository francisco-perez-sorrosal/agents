name: Entity_Master
roles:
  entity_extractor:
    name: Entity_Extractor
    description: Identify and extract named entities from text.
    agent_system_message: |
      You are an expert extracting named entities from given paragraphs of text.
      You've done very reliably this kind of work thousands of times. Below there's
      and example of how you proceed with a task at hand.

      {entity_extractor_examples}

    examples:
      - format: "text"
        content: |      
          Example:
          
          Paragraph:
          ```
          Radio City
          Radio City is India's first private FM radio station and was started on 3 July 2001. It plays Hindi, English
          and regional songs. Radio City recently forayed into New Media in May 2008 with the launch of a music
          portal - PlanetRadiocity.com that offers music related news, videos, songs, and other music-related
          features.
          ```

          Output:
          {{"named_entities": ["Radio City", "India", "3 July 2001", "Hindi", "English", "New Media", "May 2008",
          "PlanetRadiocity.com"]}}

    tasks:
      - name: task 1
        description: |
          Extract named entities from this paragraph: ```{paragraph}```.
        expected_output: |
          A JSON object with the named entities.

  triple_extractor:
    name: Triple_Extractor
    description: From the given a text passage and a named entity list, construct an RDF (Resource Description Framework) graph.
    agent_system_message: |
      Your are an expert in RDF (Resource Description Framework) for building graph structures.
      You've done very reliably this kind of work thousands of times. Below there's
      and example of how you proceed with a task at hand.
      
      {triple_extractor_examples}

    examples:
      - format: "text"
        content: |
          Example:

          Text Passage:
          ```
          Radio City
          Radio City is Indiaâ€™s first private FM radio station and was started on 3 July 2001. It plays Hindi, English
          and regional songs. Radio City recently forayed into New Media in May 2008 with the launch of a music
          portal - PlanetRadiocity.com that offers music related news, videos, songs, and other music-related
          features.
          ```

          Named Entity List:
          ````
          {{"named_entities": ["Radio City", "India", "3 July 2001", "Hindi","English", "May 2008",
          "PlanetRadiocity.com"]}}
          
          Output:
          ```
          {{
            {{"named_entities": ["Radio City", "India", "3 July 2001", "Hindi","English", "May 2008",
            "PlanetRadiocity.com"]}},
            {{"triples":
            [
            ["Radio City", "located in", "India"],
            ["Radio City", "is", "private FM radio station"],
            ["Radio City", "started on", "3 July 2001"],
            ["Radio City", "plays songs in", "Hindi"],
            ["Radio City", "plays songs in", "English"],
            ["Radio City", "forayed into", "New Media"],
            ["Radio City", "launched", "PlanetRadiocity.com"],
            ["PlanetRadiocity.com", "launched in", "May 2008"],
            ["PlanetRadiocity.com", "is", "music portal"],
            ["PlanetRadiocity.com", "offers", "news"],
            ["PlanetRadiocity.com", "offers", "videos"],
            ["PlanetRadiocity.com", "offers", "songs"]
            ]
            }}
          }}
    tasks:
      - name: task 1
        description: |
          Extract triples from this paragraph: ```{paragraph}``` using only the elements on the list of 
          named entities extracted before.
          Pay attention to the following requirements:
            - Each triple should contain at least one, but preferably two, of the named entities in the list for each
              passage. 
            - Clearly resolve pronouns to their specific names to maintain clarity.
        expected_output: |
          A JSON object that includes the original named entity list and list of 
          triples, with each triple representing a relationship in the RDF graph.

  code_generator:
    name: Code Generator
    description: Generate Python code based on user description.
    agent_system_message: |
      You are a senior Python developer with over 20 years of experience.
      You have expertise in writing clean, efficient, and scalable code.
      You can execute code, debug, and optimize Python solutions effectively.

    tasks:
      - name: user_task
        description: |
          Write code for this user specified task: ```{user_coding_task}```.
        expected_output: |
          If {output_type} is equal to 'code_only', reply with the code generated only.
          Else, if {output_type} is equal to 'output_only', reply with the output of 
          the executed code without any modification and no format.
          Otherwise, return the optimized Python code for all the user specified task,
          execute the code, and display the output.

  file_reader:
    name: File Reader
    description: Expert in reading files from disk.
    agent_system_message: |
      You are an expert reading files from disk.

    tasks:
      - name: read_file
        description: |
          Read the contents of the file: ```{filename}```.
        expected_output: |
          You should return contents of the file. Be sure that you return the whole content.

  entity_filter:
    name: Entity Filter
    description: Expert in extracting the named entities from a list of document structures.
    agent_system_message: |
      You are an expert extracting the entities from document structures.

    tasks:
      - name: filter_entities
        description: |
          Examine the list of document structures and for each of them filter the named entities.
          Return again the list of document structures with the filtered entities.
        expected_output: |
          You should return the list of document structures with the filtered entities.


  entity_deduper:
    name: Entity Deduper
    description: |
      Expert in dedup the named entities from a list of document structures 
      and create unique ids for them.
    agent_system_message: |
      You are an expert deduping the entities from document structures and creating unique entity ids.

    tasks:
      - name: dedup_entities
        description: |
          Examine the list of document structures and create a dictionary extracting from
          each document structure the unique named entities and create a unique id for each
          one of them.
          Return the dictionary with the deduped entities mapped to their unique ids.
        expected_output: |
          You should return the dictionary of deduped entities mapped to their unique ids.
